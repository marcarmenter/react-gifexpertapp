{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inVal","setInVal","onSubmit","e","preventDefault","trim","length","c","type","placeholder","value","onChange","target","handleInputChange","onBlur","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","href","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","gif","key","GifExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"oNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGlBC,mBAAS,IAHS,mBAGrCC,EAHqC,KAG9BC,EAH8B,KAoB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAeO,OAC9BN,EAAS,OAQT,2BACIO,KAAK,OACLC,YAtBG,wBAuBHC,MAAOV,EACPW,SAAU,SAAAR,GAAC,OArBG,SAACA,GACvBF,EAASE,EAAES,OAAOF,OAoBKG,CAAkBV,IACjCW,OAAQ,kBAAMb,EAAS,S,uBC5B1Bc,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,YAClB,MAAO,CACHC,GAFuC,EAAvBA,GAGhBC,MAHuC,EAAnBA,MAIpBT,IAJuC,EAAZU,OAIfC,iBAAiBX,QATlB,kBAYZM,GAZY,4CAAH,sDCCPM,G,KAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAChC,OACI,yBAAKa,UAAU,8CACX,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,6BACA,uBAAGO,KAAMhB,GAAT,iBCJCiB,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAetC,OARAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAhB,GAAI,OAAIc,EAAS,CACnBf,KAAMC,EACNY,SAAS,SAElB,CAACpB,IAEGqB,EDbsBI,CAAazB,GAA9BQ,EAFuB,EAE5BD,KAAWa,EAFiB,EAEjBA,QAClB,OACI,oCACI,wBAAIL,UAAU,yCAAyCf,GACtDoB,GAAW,uBAAGL,UAAU,oCAAb,cAEZ,yBAAKA,UAAU,kBAEPP,EAAKC,KAAI,SAACiB,GAAD,OACD,kBAAC,EAAD,eACIC,IAAKD,EAAIhB,IACLgB,UEbvBE,EAAe,WAAO,IAAD,EAGM7C,mBAAS,IAHf,mBAGvB8C,EAHuB,KAGX/C,EAHW,KAK9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACIA,SAAUA,EACV2B,IAAK3B,UCZjC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,cAAc,W","file":"static/js/main.c5640921.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => { //props.setCategories\r\n\r\n    const defVal = \" Introduzca categoria\";\r\n    const [inVal, setInVal] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInVal(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inVal.trim().length > 0) {\r\n            setCategories(c => [inVal, ...c]); \r\n            setInVal('');\r\n        }\r\n\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                placeholder={defVal}\r\n                value={inVal}\r\n                onChange={e => handleInputChange(e)}\r\n                onBlur={() => setInVal('')}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=18&api_key=nw9Q45BDzBrIRYxcgQosOXLhfErGshT6`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(({id, title, images}) => {\r\n        return {\r\n            id: id,\r\n            title: title,\r\n            url: images.downsized_medium.url\r\n        };\r\n    });\r\n    return gifs;\r\n\r\n};","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title} />\r\n            <hr />\r\n            <a href={url}>Giphy link</a>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:gifs, loading} = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            {/* SI LOADING ES TRUE MUESTRA EL PARRAFO, SINO NO HACE NADA */}\r\n            <div className=\"gifs_container\">\r\n                {\r\n                    gifs.map((gif) => (\r\n                            <GifGridItem \r\n                                key={gif.id}\r\n                                {...gif}\r\n                            />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => setstate({\r\n                data: gifs,\r\n                loading: false\r\n            }));\r\n    }, [category]);\r\n\r\n    return state; // {data:[], loading: true}\r\n\r\n        \r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            category={category} \r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GiffExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.querySelector('#root')\n);"],"sourceRoot":""}